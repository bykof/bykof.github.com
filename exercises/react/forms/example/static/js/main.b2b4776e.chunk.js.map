{"version":3,"sources":["App.js","index.js"],"names":["App","React","useState","newElfName","setNewElfName","error","setError","elves","setElves","onSubmit","event","preventDefault","length","htmlFor","type","id","value","onChange","target","style","background","color","padding","map","elve","rootElement","document","getElementById","createRoot","render"],"mappings":"sJAEe,SAASA,IACtB,MAAoCC,IAAMC,SAAS,IAAG,mBAA/CC,EAAU,KAAEC,EAAa,KAChC,EAA0BH,IAAMC,SAAS,MAAK,mBAAvCG,EAAK,KAAEC,EAAQ,KACtB,EAA0BL,IAAMC,SAAS,IAAG,mBAArCK,EAAK,KAAEC,EAAQ,KActB,OACE,qCACE,+GAIA,uBAAMC,SAlBO,SAACC,GAChBA,EAAMC,iBACFR,EAAWS,OAAS,EACtBN,EAAS,6CAIXE,EAAS,GAAD,mBAAKD,GAAK,CAAEJ,KACpBC,EAAc,IACdE,EAAS,MACX,EAQ6B,UACvB,2CACA,uBAAOO,QAAS,WAAW,kBAC3B,uBACA,uBACEC,KAAM,OACNC,GAAI,WACJC,MAAOb,EACPc,SAAU,SAACP,GAAK,OAAKN,EAAcM,EAAMQ,OAAOF,MAAM,IAEvDX,GACC,mBAAGc,MAAO,CAAEC,WAAY,MAAOC,MAAO,QAASC,QAAS,SAAU,SAC/DjB,IAGL,wBAAQS,KAAM,SAAS,oBAEzB,uBACA,6BACGP,EAAMgB,KAAI,SAACC,GAAI,OACd,6BAAgBA,GAAPA,EAAiB,QAKpC,CC7CA,IAAMC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAAC7B,EAAG,M","file":"static/js/main.b2b4776e.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function App() {\n  const [newElfName, setNewElfName] = React.useState(\"\");\n  const [error, setError] = React.useState(null);\n  const [elves, setElves] = React.useState([]);\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    if (newElfName.length < 3) {\n      setError(\"Please provide at least three characters\");\n      return;\n    }\n\n    setElves([...elves, newElfName]);\n    setNewElfName(\"\");\n    setError(null);\n  };\n\n  return (\n    <>\n      <h3>\n        Santa has to write down some elves to create a proper supply-chain. Help\n        him!\n      </h3>\n      <form onSubmit={onSubmit}>\n        <p>Add an elf</p>\n        <label htmlFor={\"elf-name\"}>Name</label>\n        <br />\n        <input\n          type={\"text\"}\n          id={\"elf-name\"}\n          value={newElfName}\n          onChange={(event) => setNewElfName(event.target.value)}\n        />\n        {error && (\n          <p style={{ background: \"red\", color: \"white\", padding: \"0.5em\" }}>\n            {error}\n          </p>\n        )}\n        <button type={\"submit\"}>Add</button>\n      </form>\n      <hr />\n      <ul>\n        {elves.map((elve) => (\n          <li key={elve}>{elve}</li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}